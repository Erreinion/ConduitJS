/**
 * conduitjs - Give any method a pre/post invocation pipeline....
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.0.2
 * Url: http://github.com/ifandelse/ConduitJS
 * License: MIT
 */
(function(t,n){"object"==typeof module&&module.exports?module.exports=n():"function"==typeof define&&define.amd?define(n(t)):t.Conduit=n(t)})(this,function(){return function(t){if("function"!=typeof t.target)throw new Error("You can only make functions into Conduits.");var n={pre:t.pre||[],post:t.post||[],all:[]},e=t.context,o={isTarget:!0,context:e,fn:function(n){var o=Array.prototype.slice.call(arguments,1);t.target.apply(e,o),n.apply(this,o)}},r=function(){n.all=n.pre.concat([o].concat(n.post))};r();var a=function(){var t=0,o=function r(){var o,a=Array.prototype.slice.call(arguments,0),p=t;t+=1,p<n.all.length&&(o=n.all[p],o.fn.apply(o.context||e,[r].concat(a)))};o.apply(this,arguments)};return a.steps=function(){return n.all},a.addStep=function(t,e){t="function"==typeof t?{fn:t}:t,e=e||{};var o=e.phase||"pre";e.prepend?n[o].unshift(t):n[o].push(t),r()},a.clear=function(){n={pre:[],post:[],all:[]}},a}});