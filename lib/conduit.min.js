/**
 * conduitjs - Give any method a pre/post invocation pipeline....
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.0.1
 * Url: http://github.com/ifandelse/ConduitJS
 * License: MIT
 */
(function(t,n){"object"==typeof module&&module.exports?module.exports=n():"function"==typeof define&&define.amd?define(n(t)):t.Conduit=n(t)})(this,function(){return function(t){if("function"!=typeof t.target)throw new Error("You can can only call conduit.make on functions.");var n={pre:t.pre||[],post:t.post||[],all:[]},e=t.context,o={isTarget:!0,context:e,fn:function(n){var o=Array.prototype.slice.call(arguments,1);t.target.apply(e,o),n.apply(this,o)}},a=function(){n.all=n.pre.concat([o].concat(n.post))};a();var r=function(){var t=0,o=function a(){var o,r=Array.prototype.slice.call(arguments,0),c=t;t+=1,c<n.all.length&&(o=n.all[c],o.fn.apply(o.context||e,[a].concat(r)))};o.apply(this,arguments)};return r.target=t.target,r.context=function(t){e=t},r.steps=function(){return n.all},r.addStep=function(t,e){t="function"==typeof t?{fn:t}:t,e=e||{};var o=e.phase||"pre";e.prepend?n[o].unshift(t):n[o].push(t),a()},r.clear=function(){n={pre:[],post:[],all:[]}},r}});